mongo 

use ecommerce

db.createCollection('products')


Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. 
El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB. 

db.products.insertMany([
    {title: 'Remera',price: 120,thumbnail: 'photo-remera',timestamp: new Timestamp()},
    {title: 'Camisa',price: 580,thumbnail: 'photo-camisa', timestamp: new Timestamp()},
    {title: 'Jeans',price: 900,thumbnail: 'photo-pantalon',timestamp: new Timestamp()},
    {title: 'Pantalon chino',price: 1280,thumbnail: 'photo-pantanlon-chino',timestamp: new Timestamp()},
    {title: 'Buzo Hoddie',price: 1700,thumbnail: 'photo-buzo-hoddie',timestamp: new Timestamp()},
    {title: 'Campera',price: 2300,thumbnail: 'photo-campera',timestamp:new Timestamp()},
    {title: 'Boxer',price: 2860,thumbnail: 'photo-boxer-hombre',timestamp: new Timestamp()},
    {title: 'Medias',price: 3350,thumbnail: 'photo-medias',timestamp: new Timestamp()},
    {title: 'Cinto',price: 4320,thumbnail: 'photo-cinto',timestamp: new Timestamp()},
    {title: 'Corbata',price: 4990,thumbnail: 'photo-corbata',timestamp: new Timestamp()}
])


Listar todos los documentos en cada colección.
db.products.find().pretty()


Mostrar la cantidad de documentos almacenados en cada una de ellas.
db.products.count()


Agregar un producto más en la colección de productos 
db.products.insert({title:'Bufanda',price:5000,thumbnail:'photo-bufanda', timestamp: new Timestamp()})


Listar los productos con precio menor a 1000 pesos.
db.products.find({price:{$lt: 1000}})


Listar los productos con precio entre los 1000 a 3000 pesos.
db.products.find({$and:[{price:{$gt:1000}}, {price:{$lt:3000}}]})


Listar los productos con precio mayor a 3000 pesos.
db.products.find({price:{$gt:3000}})


Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
db.products.find({},{name: 1}).sort({price: 1}).skip(2).limit(1)


Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
db.products.updateMany({},{$set:{stock:100}})


Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 
db.products.updateMany({price:{$gt:4000}},{$set:{stock:0}})


Borrar los productos con precio menor a 1000 pesos 
db.products.deleteMany({price:{$lt:1000}})


